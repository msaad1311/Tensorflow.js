{"version":3,"sources":["index.js"],"names":["img","document","getElementById","bgs","blurEffect","effect_blur","loadAndPredict","bodyPix","load","architecture","outputStride","quantBytes","net","segmentPerson","flipHorizontal","internalResolution","segmentationThreshold","segmentation","foregroundColor","r","g","b","a","backgroundColor","backgroundDarkeningMask","toMask","frameMerger","background_rm","canvas","width","height","ctx","getContext","globalCompositeOperation","putImageData","drawImage","addEventListener","checked","filter","console","log"],"mappings":"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","file":"Background_Removal.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const img = document.getElementById('image');\r\nconst bgs = document.getElementById('image_back');\r\nlet blurEffect;\r\nlet effect_blur = document.getElementById('blurrer');\r\n\r\nasync function loadAndPredict() {\r\n    const net = await bodyPix.load({\r\n        architecture: 'MobileNetV1',\r\n        outputStride: 16,\r\n        quantBytes: 4\r\n      });\r\n    const segmentation = await net.segmentPerson(img, {\r\n        flipHorizontal: false,\r\n        internalResolution: 'full',\r\n        segmentationThreshold: 0.8\r\n    });\r\n    const foregroundColor = { r: 0, g: 0, b: 0, a: 255 };\r\n    const backgroundColor = { r: 0, g: 0, b: 0, a: 0 };\r\n    const backgroundDarkeningMask = bodyPix.toMask(segmentation, foregroundColor, backgroundColor, false);\r\n    frameMerger(backgroundDarkeningMask)\r\n    }\r\nasync function frameMerger(background_rm){\r\n  if (!background_rm){\r\n    return\r\n  }\r\n  // console.log(bgs);\r\n  const canvas = document.getElementById('canvas');\r\n  \r\n  canvas.width = img.width;\r\n  canvas.height = img.height;\r\n  let ctx = canvas.getContext('2d');\r\n  \r\n  ctx.globalCompositeOperation='destination-over';\r\n  ctx.putImageData(background_rm, 0, 0);\r\n  ctx.globalCompositeOperation = 'source-in';\r\n  // // ctx.putImageData(img, 0, 0);\r\n  ctx.drawImage(img, 0, 0, img.width, img.height);\r\n  ctx.globalCompositeOperation = 'destination-atop';\r\n  effect_blur.addEventListener('change', function () {\r\n    if (effect_blur.checked) {\r\n      ctx.filter='blur(3px)';\r\n      console.log('it is on');\r\n      ctx.drawImage(bgs, 0, 0,bgs.width,bgs.height);\r\n    } else {\r\n      console.log('it is off');\r\n      ctx.drawImage(bgs, 0, 0,bgs.width,bgs.height);\r\n    }\r\n  })\r\n    \r\n  \r\n  }\r\n\r\n   \r\nloadAndPredict();"]}